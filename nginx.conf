http {
    # 基础设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # 前端应用代理
    server {
        listen 3000;
        
        # 代理前端应用的所有请求
        location / {
            proxy_pass http://gdst-dex:3000;  # Docker 服务名
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }

        # Uniswap Gateway API
        location /api/gateway/ {
            proxy_pass http://host.docker.internal:7890;  # 使用 host.docker.internal 访问宿主机
            proxy_set_header Host interface.gateway.uniswap.org;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_ssl_server_name on;  # 启用 SNI
            rewrite ^/api/gateway/(.*) /v2/$1 break;
        }

        # Amplitude Proxy
        location /api/amplitude/ {
            proxy_pass http://host.docker.internal:7890;
            proxy_set_header Host interface.gateway.uniswap.org;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_ssl_server_name on;
            rewrite ^/api/amplitude/(.*) /v1/amplitude-proxy/$1 break;
        }

        # Statsig Proxy
        location /api/statsig/ {
            proxy_pass http://host.docker.internal:7890;
            proxy_set_header Host interface.gateway.uniswap.org;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_ssl_server_name on;
            rewrite ^/api/statsig/(.*) /v1/statsig-proxy/$1 break;
        }

        # Moonpay API
        location /api/moonpay/ {
            proxy_pass http://host.docker.internal:7890;
            proxy_set_header Host api.moonpay.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_ssl_server_name on;
            rewrite ^/api/moonpay/(.*) /$1 break;
        }

        # Moonpay Link
        location /api/moonpay-link/ {
            proxy_pass http://host.docker.internal:7890;
            proxy_set_header Host us-central1-uniswap-mobile.cloudfunctions.net;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_ssl_server_name on;
            rewrite ^/api/moonpay-link/(.*) /signMoonpayLinkV2/$1 break;
        }

        # QuickNode RPC endpoints
        location /api/rpc/ {
            proxy_pass http://host.docker.internal:7890;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_ssl_server_name on;

            # 根据不同的链选择不同的主机
            if ($request_uri ~* "/mainnet/") {
                proxy_set_header Host ultra-blue-flower.quiknode.pro;
                rewrite ^/api/rpc/mainnet/(.*) /770b22d5f362c537bc8fe19b034c45b22958f880/$1 break;
            }
            if ($request_uri ~* "/arbitrum/") {
                proxy_set_header Host tiniest-stylish-arrow.arbitrum-mainnet.quiknode.pro;
                rewrite ^/api/rpc/arbitrum/(.*) /d06833352b8de605914d9e24a390d8b4d3aff7ba/$1 break;
            }
        }

        # 通用 CORS 设置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        
        # OPTIONS 预检请求处理
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # 错误处理
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

events {
    worker_connections 1024;
}